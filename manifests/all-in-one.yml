apiVersion: v1
kind: Namespace
metadata:
  name:  ingress-example
---
apiVersion: v1
data:
  auth: cGVlcmlnb246JGFwcjEkbkpMWmhoQ0MkR0x4QjZqZ1ZPWi5qNUQ3d29RTjRyMAo=
kind: Secret
metadata:
  name: basic-auth
  namespace: ingress-example
---
apiVersion: v1
kind: Secret
metadata:
  name: dbinfo
  namespace: ingress-example
type: Opaque
stringData:
    PG_HOST: postgres
    PG_USER: janisis
    PG_PASSWORD: supersecret 
    PG_DATABASE: janisis
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: ingress-example
spec:
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres-database
          image: postgres
          volumeMounts:
            - name: postgres-disk
              mountPath: /var/lib/postgresql/data
          env:
            - name:  POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name:  mysecret
                  key:  PG_USER
            - name:  POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name:  mysecret
                  key:  PG_PASSWORD
            - name:  POSTGRES_DATABASE
              valueFrom:
                secretKeyRef:
                  name:  mysecret
                  key:  PG_DATABASE
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
  volumeClaimTemplates:
    - metadata:
        name: postgres-disk
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: servicea
  namespace: ingress-example
spec:
  replicas: 1
  selector:
    matchLabels:
      app: servicea
  template:
    metadata:
      labels:
        app: servicea
        editor: vscode
    spec:
      containers:
      - name: servicea
        image: janisis.azurecr.io/servicea
        env:
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: "3000"
          - name:  PG_HOST
            valueFrom:
              secretKeyRef:
                name:  mysecret
                key:  PG_HOST
          - name:  PG_USER
            valueFrom:
              secretKeyRef:
                name:  mysecret
                key:  PG_USER
          - name:  PG_PASSWORD
            valueFrom:
              secretKeyRef:
                name:  mysecret
                key:  PG_PASSWORD
          - name:  PG_DATABASE
            valueFrom:
              secretKeyRef:
                name:  mysecret
                key:  PG_DATABASE
        ports:
        - containerPort: 3000
          name: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: serviceb
  namespace: ingress-example
spec:
  replicas: 1
  selector:
    matchLabels:
      app: serviceb
  template:
    metadata:
      labels:
        app: serviceb
        editor: vscode
    spec:
      containers:
      - name: serviceb
        image: janisis.azurecr.io/serviceb
        ports:
        - containerPort: 3000
          name: api
        env:
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: "3000"
          - name:  PG_HOST
            valueFrom:
              secretKeyRef:
                name:  mysecret
                key:  PG_HOST
          - name:  PG_USER
            valueFrom:
              secretKeyRef:
                name:  mysecret
                key:  PG_USER
          - name:  PG_PASSWORD
            valueFrom:
              secretKeyRef:
                name:  mysecret
                key:  PG_PASSWORD
          - name:  PG_DATABASE
            valueFrom:
              secretKeyRef:
                name:  mysecret
                key:  PG_DATABASE
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: ingress-example
spec:
  ports:
  - port: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: servicea
  namespace: ingress-example
spec:
  ports:
  - port: 3000
  selector:
    app: servicea
---
apiVersion: v1
kind: Service
metadata:
  name: serviceb
  namespace: ingress-example
spec:
  ports:
  - port: 3000
  selector:
    app: serviceb
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress
  namespace: ingress-example
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
spec:
  tls:
  - hosts:
    - demo.azure.com
    secretName: aks-ingress-tls
  rules:
  - http:
      paths:
      - backend:
          serviceName: servicea
          servicePort: 3000
        path: /service-a(/|$)(.*)
      - backend:
          serviceName: serviceb
          servicePort: 3000
        path: /service-b(/|$)(.*)
      - backend:
          serviceName: servicea
          servicePort: 3000
        path: /(.*)